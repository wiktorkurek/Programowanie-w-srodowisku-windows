/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login_register;

import com.mysql.jdbc.Statement;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Patryk
 */
public class AdminEventChange extends javax.swing.JFrame {

    /**
     * Creates new form AdminEventChange
     */
    public AdminEventChange() {
        initComponents();
        showEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEvents = new javax.swing.JTable();
        jButtonRegister1 = new javax.swing.JButton();
        deletePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDeleteEventID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDeleteEventName = new javax.swing.JTextField();
        buttonDelete = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldEventName = new javax.swing.JTextField();
        jTextFieldLEventAgenda = new javax.swing.JTextField();
        jTextFieldEventDate = new javax.swing.JTextField();
        jButtonCreateEvent = new javax.swing.JButton();
        deletePanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldModEventID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldModEventName = new javax.swing.JTextField();
        buttonEditEvent = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldModAgenda = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldModEventDate = new javax.swing.JTextField();
        jLabel_close = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(102, 255, 153));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jTableEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "agenda", "date"
            }
        ));
        jScrollPane1.setViewportView(jTableEvents);

        jButtonRegister1.setBackground(new java.awt.Color(0, 51, 102));
        jButtonRegister1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonRegister1.setText("Cancel and Close");
        jButtonRegister1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRegister1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRegister1MouseClicked(evt);
            }
        });
        jButtonRegister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegister1ActionPerformed(evt);
            }
        });

        deletePanel.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ID wydarzenia:");

        jTextFieldDeleteEventID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nazwa wydarzenia:");

        jTextFieldDeleteEventName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        buttonDelete.setText("DELETE");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletePanelLayout = new javax.swing.GroupLayout(deletePanel);
        deletePanel.setLayout(deletePanelLayout);
        deletePanelLayout.setHorizontalGroup(
            deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanelLayout.createSequentialGroup()
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deletePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDeleteEventID)
                            .addComponent(jTextFieldDeleteEventName)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                    .addGroup(deletePanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(buttonDelete)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        deletePanelLayout.setVerticalGroup(
            deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldDeleteEventID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldDeleteEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(buttonDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Nazwa wydarzenia:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Agenda:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Data wydarzenia:");

        jTextFieldEventName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldEventName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEventNameActionPerformed(evt);
            }
        });

        jTextFieldLEventAgenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTextFieldEventDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldEventDate.setForeground(new java.awt.Color(204, 204, 204));
        jTextFieldEventDate.setText("01-11-1911");
        jTextFieldEventDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEventDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEventDateFocusLost(evt);
            }
        });

        jButtonCreateEvent.setText("CREATE NEW EVENT");
        jButtonCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateEventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(41, 41, 41))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextFieldEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLEventAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCreateEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldLEventAgenda))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonCreateEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        deletePanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("ID wydarzenia:");

        jTextFieldModEventID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Nazwa wydarzenia:");

        jTextFieldModEventName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        buttonEditEvent.setText("EDIT EVENT");
        buttonEditEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditEventActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Agenda:");

        jTextFieldModAgenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Data wydarzenia:");

        jTextFieldModEventDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldModEventDate.setForeground(new java.awt.Color(204, 204, 204));
        jTextFieldModEventDate.setText("01-11-1911");
        jTextFieldModEventDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldModEventDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldModEventDateFocusLost(evt);
            }
        });

        javax.swing.GroupLayout deletePanel1Layout = new javax.swing.GroupLayout(deletePanel1);
        deletePanel1.setLayout(deletePanel1Layout);
        deletePanel1Layout.setHorizontalGroup(
            deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanel1Layout.createSequentialGroup()
                .addGroup(deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deletePanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldModEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deletePanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(deletePanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldModEventID, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldModEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(deletePanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldModAgenda))
                            .addGroup(deletePanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 5, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deletePanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonEditEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        deletePanel1Layout.setVerticalGroup(
            deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldModEventID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldModEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldModAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(deletePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldModEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(buttonEditEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jButtonRegister1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(deletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deletePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deletePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deletePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRegister1)
                .addGap(35, 35, 35))
        );

        jLabel_close.setBackground(new java.awt.Color(255, 255, 0));
        jLabel_close.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_close.setText("X");
        jLabel_close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_closeMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel2.setText("Witaj Adminie");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_close, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel_close))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel_closeMouseClicked

    private void jLabel_closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeMouseEntered

    }//GEN-LAST:event_jLabel_closeMouseEntered

    private void jLabel_closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_closeMouseExited

    }//GEN-LAST:event_jLabel_closeMouseExited

    private void jButtonRegister1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegister1MouseClicked

    }//GEN-LAST:event_jButtonRegister1MouseClicked

    private void jButtonRegister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegister1ActionPerformed
        //open new
        AdminFrame aFrame = new AdminFrame();
        aFrame.setVisible(true);
        aFrame.pack();
        aFrame.setLocationRelativeTo(null);
        //close this frame
        this.dispose();
    }//GEN-LAST:event_jButtonRegister1ActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        String eventName = jTextFieldDeleteEventName.getText();

        if(verificationEventDel())
        {
            int id = Integer.valueOf(jTextFieldDeleteEventID.getText());
            if(checkEvent(eventName,id))
            {
                PreparedStatement ps;
                ResultSet rs;

                String deleteQuery = "DELETE FROM `events` WHERE `eventName` = ? AND `id` = ?";

                try {
                    ps = ConnectionClass.getConnection().prepareStatement(deleteQuery);
                    ps.setString(1, eventName);
                    ps.setInt(2, id);

                    if(ps.executeUpdate() != 0)
                    {
                        JOptionPane.showMessageDialog(null, "Wydarzenie zostalo usuniete z bazy.");
                        showEvent();

                    }else
                    {
                        JOptionPane.showMessageDialog(null, "Sprawdz czy dane sa poprawne");

                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Register_Pane.class.getName()).log(Level.SEVERE, null, ex);
                }

            }else JOptionPane.showMessageDialog(null, "Sprawdz czy dane sa poprawne");
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void jButtonCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateEventActionPerformed
        String eventName = jTextFieldEventName.getText();
        String eventAgenda = jTextFieldLEventAgenda.getText();
        String eventDate = jTextFieldEventDate.getText();
        
        if(verificationEventAdd())
        {
            if(!checkEventName(eventName))
            {
                PreparedStatement ps;
                ResultSet rs;
                
                String createEvetQuery = "INSERT INTO `events`(`eventName`, `agenda`, `date`) VALUES (?,?,?)";
                
                try {
                    ps = ConnectionClass.getConnection().prepareStatement(createEvetQuery);
                    ps.setString(1, eventName);
                    ps.setString(2, eventAgenda);
                    ps.setString(3, eventDate);
                    
                    if(ps.executeUpdate() != 0)
                    {
                        JOptionPane.showMessageDialog(null, "Dodano nowe wydarzenie");
                        showEvent();
                        
                    }else
                    {
                        JOptionPane.showMessageDialog(null, "Sprawdz czy dane sa poprawne");

                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Register_Pane.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }

    }//GEN-LAST:event_jButtonCreateEventActionPerformed

    private void jTextFieldEventNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEventNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEventNameActionPerformed

    private void buttonEditEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditEventActionPerformed
        String eventName = jTextFieldModEventName.getText();
        String eventAgenda = jTextFieldModAgenda.getText();
        String eventDate = jTextFieldModEventDate.getText();
        
        if(verificationEventMod())
        {
            int id = Integer.valueOf(jTextFieldModEventID.getText());
            if(checkEvent(eventName,id))
            {
                PreparedStatement ps;
                ResultSet rs;
                
                String modEventQuery = "UPDATE `events` SET `agenda`= ?,`date`= ? WHERE `eventName` = ? AND `id` = ?";
                
                try {
                    ps = ConnectionClass.getConnection().prepareStatement(modEventQuery);
                    ps.setString(1, eventAgenda);
                    ps.setString(2, eventDate);
                    ps.setString(3, eventName);
                    ps.setInt(4, id);
                    
                    if(ps.executeUpdate() != 0)
                    {
                        JOptionPane.showMessageDialog(null, "Wydarzenie zostalo zaktualizowane");
                        showEvent();
                        
                    }else
                    {
                        JOptionPane.showMessageDialog(null, "Sprawdz czy dane sa poprawne");

                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Register_Pane.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }else JOptionPane.showMessageDialog(null, "Sprawdz czy dane sa poprawne");
        }
    }//GEN-LAST:event_buttonEditEventActionPerformed

    private void jTextFieldEventDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEventDateFocusGained
        //clear field
        if(jTextFieldEventDate.getText().trim().equals("01-11-1911")){
        jTextFieldEventDate.setText("");
        jTextFieldEventDate.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTextFieldEventDateFocusGained

    private void jTextFieldEventDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEventDateFocusLost
        //if focus lost set field
        if(jTextFieldEventDate.getText().trim().equals("")){
        jTextFieldEventDate.setText("01-11-1911");
        jTextFieldEventDate.setForeground(new Color(204,204,204));
        }
    }//GEN-LAST:event_jTextFieldEventDateFocusLost

    private void jTextFieldModEventDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldModEventDateFocusGained
        //clear field
        if(jTextFieldModEventDate.getText().trim().equals("01-11-1911")){
        jTextFieldModEventDate.setText("");
        jTextFieldModEventDate.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTextFieldModEventDateFocusGained

    private void jTextFieldModEventDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldModEventDateFocusLost
        //if focus lost set field
        if(jTextFieldModEventDate.getText().trim().equals("")){
        jTextFieldModEventDate.setText("01-11-1911");
        jTextFieldModEventDate.setForeground(new Color(204,204,204));
        }
    }//GEN-LAST:event_jTextFieldModEventDateFocusLost
    
    
    public boolean verificationEventAdd(){
        String eventName = jTextFieldEventName.getText();
        String eventAgenda = jTextFieldLEventAgenda.getText();
        String eventDate = jTextFieldEventDate.getText();
        //check empty fields
        if(eventName.trim().equals("")||eventAgenda.trim().equals("")||eventDate.trim().equals("")||eventDate.trim().equals("01-11-1911"))
        {
            JOptionPane.showMessageDialog(null, "Jedno lub więcej pól jest pusta. Uzupelnij je.","Empty fields",2);
            return false;
        }else return true;
    }
    
    public boolean verificationEventMod(){
        String eventName = jTextFieldModEventName.getText();
        String eventAgenda = jTextFieldModAgenda.getText();
        String eventDate = jTextFieldModEventDate.getText();
        String id = jTextFieldModEventID.getText();
        //check empty fields
        if(id.trim().equals("")||eventName.trim().equals("")||eventAgenda.trim().equals("")||eventDate.trim().equals("")||eventDate.trim().equals("01-11-1911"))
        {
            JOptionPane.showMessageDialog(null, "Jedno lub więcej pól jest pusta. Uzupelnij je.","Empty fields",2);
            return false;
        }else return true;
    }
    
    public boolean verificationEventDel(){
        String eventID = jTextFieldDeleteEventID.getText();
        String eventName = jTextFieldDeleteEventName.getText();
        //check empty fields
        if(eventName.trim().equals("")||eventID.trim().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Jedno lub więcej pól jest pusta. Uzupelnij je.","Empty fields",2);
            return false;
        }else return true;
    }
    
    public boolean checkEventName(String eventName)
    {
        PreparedStatement st;
        ResultSet rs;
        boolean usernameExist = false;
        
        String query = "SELECT * FROM `events` WHERE `eventName` = ?";
        
        try {
            st = ConnectionClass.getConnection().prepareStatement(query);
            st.setString(1, eventName);
            rs = st.executeQuery();
            
            if(rs.next())
            {
                usernameExist = true;
                JOptionPane.showMessageDialog(null, "Ta nazwa wydarzenia jest zajeta. Podaj inna nazwe","Ussername failed",2);
            
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Register_Pane.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return usernameExist;
    }
    
    public boolean checkEvent(String eventName,int id)
    {
        PreparedStatement st;
        ResultSet rs;
        boolean eventNameExist = false;
        boolean idExist = false;
        boolean exist = false;
        
        String query = "SELECT * FROM `events` WHERE `eventName` = ?";
        
        try {
            st = ConnectionClass.getConnection().prepareStatement(query);
            st.setString(1, eventName);
            rs = st.executeQuery();
            
            if(rs.next())
            {
                query = "SELECT * FROM `events` WHERE `id` = ?";
                eventNameExist = true;
                st = ConnectionClass.getConnection().prepareStatement(query);
                st.setInt(1, id);
                rs = st.executeQuery();
                if(rs.next())
                {
                    idExist = true;
                }
            
            }
            if(eventNameExist & idExist) exist = true;
            
        } catch (SQLException ex) {
            Logger.getLogger(Register_Pane.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        return exist;
    }
    
    public ArrayList<Events> eventList() throws SQLException{
        ArrayList<Events> eventList = new ArrayList<>();
        try {
            Statement st = (Statement) ConnectionClass.getConnection().createStatement();
            //create query
            String eventSeeQuery = "SELECT * FROM events";
            ResultSet rs = st.executeQuery(eventSeeQuery);
            Events events;
            
            while(rs.next()){
                events=new Events(rs.getInt("id"), rs.getString("eventName"), rs.getString("agenda"), rs.getString("date"));
                eventList.add(events);
            }
            
            
        } catch (SQLException ex) {
                    Logger.getLogger(Register_Pane.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return eventList;        
    }
    
    public void showEvent(){
        ArrayList<Events> list;
        try {
            list = eventList();
            DefaultTableModel model = (DefaultTableModel)jTableEvents.getModel();
            Object[] row = new Object[4];
            model.setRowCount(0);
            for(int i=0;i<list.size();i++){
                row[0] = list.get(i).getid();
                row[1] = list.get(i).geteventName();
                row[2] = list.get(i).getagenda();
                row[3] = list.get(i).getdate();
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminEventChange.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminEventChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminEventChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminEventChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminEventChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminEventChange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEditEvent;
    private javax.swing.JPanel deletePanel;
    private javax.swing.JPanel deletePanel1;
    private javax.swing.JButton jButtonCreateEvent;
    private javax.swing.JButton jButtonRegister1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_close;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEvents;
    private javax.swing.JTextField jTextFieldDeleteEventID;
    private javax.swing.JTextField jTextFieldDeleteEventName;
    private javax.swing.JTextField jTextFieldEventDate;
    private javax.swing.JTextField jTextFieldEventName;
    private javax.swing.JTextField jTextFieldLEventAgenda;
    private javax.swing.JTextField jTextFieldModAgenda;
    private javax.swing.JTextField jTextFieldModEventDate;
    private javax.swing.JTextField jTextFieldModEventID;
    private javax.swing.JTextField jTextFieldModEventName;
    // End of variables declaration//GEN-END:variables
}
